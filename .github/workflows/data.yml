name: Update Data

on:
  schedule:
    - cron: "0 0 * * *"
  workflow_dispatch:

jobs:
  scrape:
    name: Scrape timetable
    runs-on: ubuntu-latest

    permissions:
      contents: write

    outputs:
      repo-updated: ${{ steps.git-step.outputs.updated }}

    env:
      LOGIN: ${{ secrets.LOGIN }}
      PASSWORD: ${{ secrets.PASSWORD }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Clone scraper
        uses: actions/checkout@v4
        with:
          path: scraper
          repository: mad-maids/wiut-scraper
          ref: main
          fetch-depth: 1
          token: ${{ secrets.GH }}

      - name: Install Node.js
        uses: actions/setup-node@v3

      - name: Install pnpm
        working-directory: scraper
        run: npm install -g pnpm

      - name: Install dependencies
        working-directory: scraper
        run: |
          pnpm install
          pnpm lint
          pnpm fmt

      - name: Setup playwright
        working-directory: scraper
        run: pnpx playwright install --with-deps

      - name: Install xvfb if not exists
        working-directory: scraper
        run: |
          if ! command -v xvfb-run &> /dev/null
          then
            sudo apt-get install -y xvfb
          else
            echo "xvfb already installed"
          fi

      - name: Run the scraper
        working-directory: scraper
        run: xvfb-run pnpm start

      - name: Remove old timetable if exists
        run: |
          if [ -d ./timetable ]; then
            rm -rf ./timetable
          else
            echo "No old timetable found"
          fi

      - name: Remove old groups if exists
        run: |
          if [ -d ./groups ]; then
            rm -rf ./groups
          else
            echo "No old groups found"
          fi

      - name: Clone data/timetable repo
        run: cp -r ./scraper/data/timetable ./timetable

      - name: Clone data/groups repo
        run: cp -r ./scraper/data/groups ./groups

      - name: Remove scraper
        run: rm -rf scraper

      - name: Upload all changes to GIT
        id: git-step
        run: |
          git config user.name github-actions[bot]
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com
          git add .
          [[ -z $(git status -uno --porcelain) ]] && echo "No updates detected, no need for push" && exit 0;
          git commit -m "update timetable $(date -u)"
          git push origin main --force
          echo "::set-output name=updated::yes"
